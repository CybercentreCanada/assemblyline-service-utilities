name: build

trigger:
  branches:
    exclude:
    - '*'
  tags:
    include: ["v*"]
pr: none

pool:
  vmImage: "ubuntu-20.04"

jobs:
- job: test_build_deploy
  displayName: Test, Build and Deploy
  variables:
  - group: deployment-information
  steps:
  - task: UsePythonVersion@0
    displayName: Set python version
    inputs:
      versionSpec: 3.9

  - script: |
      set -xv  # Echo commands before they are run
      export VERSION=${BUILD_SOURCEBRANCH#"refs/tags/v"}
      echo $VERSION > assemblyline_service_utilities/VERSION
      sudo env "PATH=$PATH" python -m pip install --no-cache-dir -U wheel pip
      python setup.py bdist_wheel
    displayName: Build

  - script: |
      set -xv # Echo commands before they are run
      sudo apt-get update
      sudo apt-get install -y build-essential libffi-dev libfuzzy-dev python3-dev
    displayName: Setup Environment

  - script: |
      set -xv # Echo commands before they are run
      export VERSION=${BUILD_SOURCEBRANCH#"refs/tags/v"}
      sudo env "PATH=$PATH" python -m pip install -f dist/ "assemblyline-service-utilities[test]==${VERSION}"
      sudo env "PATH=$PATH" python -m pip install -r test/requirements.txt
      python -m pytest -p no:cacheprovider --durations=10 -rsx -xsvvv --disable-warnings
    displayName: Test

  - script: |
      set -xv  # Echo commands before they are run
      sudo env "PATH=$PATH" python -m pip install --no-cache-dir twine
      ls dist
      twine upload --skip-existing dist/*
    displayName: Deploy to PyPI
    env:
      TWINE_USERNAME: $(twineUsername)
      TWINE_PASSWORD: $(twinePassword)
